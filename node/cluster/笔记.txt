1.post数据mutipart
2.流
3.压缩

--------------------------------------------------------------------------------

1.缓存
2.多进程
3.数据库

--------------------------------------------------------------------------------

第一重要、缓存策略：
cache-control
expires

第二重要、缓存实现过程：
1.第一次S->C："Last-Modified: Sat, 02 Dec 2017 04:03:14 GMT"
2.第二次C->S："If-Modified-Since: Sat, 02 Dec 2017 04:03:14 GMT"
3.第二次S->C：200 || 304

--------------------------------------------------------------------------------

多线程：性能高；复杂、考验程序员
多进程：性能略低；简单、对程序员要求低

Node.js默认：单进程、单线程
多进程

--------------------------------------------------------------------------------

主进程：负责派生子进程
子进程：干活

--------------------------------------------------------------------------------

cluster、process

--------------------------------------------------------------------------------

localstorage本地存储、替代cookie
cookie：小-4K
localStorage：大-5M

--------------------------------------------------------------------------------

多进程：安全、性能高

多进程——CPU

--------------------------------------------------------------------------------

进程-怪：
1.普通程序不能“创建”进程，只有系统进程才能创建进程；只有主进程能分裂
2.进程是分裂出来
3.分裂出来的两个进程执行的是同一套代码
*4.父子进程之间可以共享"句柄"

--------------------------------------------------------------------------------

主进程=守护进程
子进程=工作进程

--------------------------------------------------------------------------------

进程调度——开销

多个进程：
第一个满了 -> 启用第二个 -> 前两个都满了 -> 启用第三个

--------------------------------------------------------------------------------

我用python fork子进程的时候子进程pid都是连续的 node居然不是

--------------------------------------------------------------------------------

问个傻问题：js能调度多进程？系统一般不就分配一个进程么？js怎么做到的？感觉我没好好听课

--------------------------------------------------------------------------------

数据库：
MySQL

--------------------------------------------------------------------------------

数据库：
1.服务端：wamp里面的mysql、单装的MySQL的server
2.客户端：Nodejs、Java、PHP、Navicat for MySQL

--------------------------------------------------------------------------------

认识数据库：
1.库-文件夹：不能存数据，只能管理表
2.表-文件：存数据

--------------------------------------------------------------------------------

使用navicat：
1.连接到服务器
  新建mysql连接

2.打开连接
  双击

3.新建库
  名字：尽量别用-
  字符集：utf8
  排序规则：utf8_general_ci
4.新建表
  字段

--------------------------------------------------------------------------------

列-字段(域)：项目
行：一条数据

--------------------------------------------------------------------------------

let a;

a='abc';
a=12;
a=true;
a=new Date();

--------------------------------------------------------------------------------

字段类型：
数字
  整数：tinyint(8位)、smallint、mediumint、int、bigint
        -128~127|0~255                    -21亿~21亿|0~43亿    18万万亿
  小数：float-单精度浮点数、double-双精度浮点数
        小数点后8位        10^308

字符串
  小：varchar   255
  大：text      1G

--------------------------------------------------------------------------------

主键：
1.性能高
2.唯一

--------------------------------------------------------------------------------

1.Nodejs操作数据库
2.SQL——4大查询
3.接口
