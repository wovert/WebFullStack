1.NodeJS——数据库
2.数据交互——Ajax跨域
3.WebSocket

--------------------------------------------------------------------------------

导入数据——必须先建库

--------------------------------------------------------------------------------

1.连接
  let db=mysql.createConnection({host, port, user, password, database});
  ?

2.查询
  db.query('干啥', (err, data)=>{});

--------------------------------------------------------------------------------

SQL：
4大查询
1.增   INSERT
  INSERT INTO 表 (字段列表) VALUES(值列表)

  INSERT INTO user_table (ID, name, gender, chinese, math, english) VALUES(0, 'blue', '男', 35, 18, 29);

2.删   DELETE
  DELETE FROM 表 WHERE 条件

  DELETE FROM user_table WHERE ID=3;

3.改   UPDATE
  UPDATE 表 SET 字段=值, 字段2=值2, ... WHERE 条件

  UPDATE user_table SET chinese=100 WHERE ID=2;

4.查   SELECT
  SELECT 字段列表 FROM 表 WHERE 条件

  SELECT name, gender FROM user_table WHERE ID=2;

--------------------------------------------------------------------------------

1.node中mysql写法
  let db=mysql.createConnection({配置});
  let db=mysql.createPool({配置});

  db.query(sql, (err, data)=>{});

2.基础SQL语句
  增删改查

--------------------------------------------------------------------------------

用户注册、登陆：
1.数据库结构（数据字典）
2.接口格式（接口文档）

--------------------------------------------------------------------------------

1.数据库结构
2.接口
注册：
  /reg?user=xxx&pass=xxx
  =>{err: 0, msg: '原因'}

登陆：
  /login?user=xxx&pass=xxx
  =>{err: 0, msg: '原因'}

--------------------------------------------------------------------------------

RESTful

--------------------------------------------------------------------------------

WebSocket：
1.双向通信
2.自动跨域
3.性能高

--------------------------------------------------------------------------------

socket.io

--------------------------------------------------------------------------------

WebSocket不是独立使用
