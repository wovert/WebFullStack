websocket
1.双向
2.性能高

--------------------------------------------------------------------------------

socket

--------------------------------------------------------------------------------

socket.io

--------------------------------------------------------------------------------

服务端：
  sock.on('connection')
  sock.on('disconnect')

客户端：
  sock.on('connect')
  sock.on('disconnect')

--------------------------------------------------------------------------------

原生websocket：

--------------------------------------------------------------------------------

WebSocket是前台的东西，是HTML5带的一种东西
1.只有前台有WebSocket这个东西
2.后台没有，后台有Socket

--------------------------------------------------------------------------------

原始数据：
GET / HTTP/1.1
Host: localhost:8080
Connection: Upgrade
Pragma: no-cache
Cache-Control: no-cache
Upgrade: websocket
Origin: file://
Sec-WebSocket-Version: 13
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like
Gecko) Chrome/65.0.3315.4 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,zh-TW;q=0.7,es;q=0.6,fr;q=0.5,pt;q=0.4
Sec-WebSocket-Key: +0jgXtYyVeG28Gn1CLUKIg==
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits

--------------------------------------------------------------------------------

1.第一行删掉
Host: localhost:8080
Connection: Upgrade
Pragma: no-cache
Cache-Control: no-cache
Upgrade: websocket
Origin: file://
Sec-WebSocket-Version: 13
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like
Gecko) Chrome/65.0.3315.4 Safari/537.36
Accept-Encoding: gzip, deflate, br
Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,zh-TW;q=0.7,es;q=0.6,fr;q=0.5,pt;q=0.4
Sec-WebSocket-Key: +0jgXtYyVeG28Gn1CLUKIg==
Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits

--------------------------------------------------------------------------------

2.每行数据用": "切开

--------------------------------------------------------------------------------

数据帧：包、报、块、...
结构化

--------------------------------------------------------------------------------

1位(bit)
8位=>1字节(byte)

--------------------------------------------------------------------------------

81       9c       11       2d       f8       bd         数据.....
10000001 10011100 00010001 00101101 11111000 10111101

11 2d f8 bd
6a 0f 96 dc 7c 48 da 87 33 40 8b da 33 01 da d9 70 59 99 9f 2b 76 c9 8f 3d 18 a5 c0



1 000 0001   1 0011100 00010001 00101101 11111000 10111101
F RSV opcode M payload masking-key
I            A 28个字
N            S
             K


28

--------------------------------------------------------------------------------

用WebSocket：
1.socket.io
2.原生WebSocket
  i.net模块
  ii.流程
    a.握手
      C:version:13、sec-websocket-key:xxxxx、sha1(key+mask)=>base64
      S:101 Switching Protocols、sec-websocket-accept: base64
      C <-> S

      Client：
      onopen
      onmessage
      onclose

      Server:
      net.createServer(sock=>{});
      sock.once('data', 握手);
      sock.on('data', 数据请求);
      sock.on('end');

    b.数据帧解析

--------------------------------------------------------------------------------

ajax2.0
formdata——模拟<form>
1.模拟表单提交
2.提交文件、监控上传进度

swf辅助完成——swfuploader

--------------------------------------------------------------------------------

ajax2.0：
1.cors跨域
2.formdata提交表单

--------------------------------------------------------------------------------